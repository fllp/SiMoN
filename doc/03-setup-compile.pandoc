\newpage

# Compile & prepare SiMoN

[HFST-Suite]: http://hfst.sourceforge.net/

## Prerequesites


In order to use SiMoN for morphological analysis, the [HFST-Suite] is required.

HFST is available for MAC/UNIX and Windows platforms and can be installed according to the information provided on the project home page.
SiMoN currently uses hfst v3.7.0.

## Compiling SiMoN

If you received the SiMoN source files, you can use the provided Makefile(Makefile)[^1] for to compile the FST binaries.
In case that you do not have the sources and only recieved the binaries, you can start using them right away after installing the HFST software

[^1]: The HFST-Package needs to be installed and its binaries must be present in the systems $PATH variable.
**This works on Mac OSX and Linux only!**
Even though GNU Make is available for Windows, users of that platforms are advised to follow the instructions in the section *[manual compilation](#manual-compilation)*. For these the only requirement is the HFST software.

### Make options

Simply typing ```make``` in a terminal should get you set up.
The default behaviour is to compile the generator for sicilian morphology only.
In order to compile the italian part as well, you can overwrite the default by issueing the following command[^a]:

~~~
make target=italian
~~~

#### All in one {-}

For convenience, there is an additional command that builds all parts of SiMoN and AnIta[^a] respetively and combines them into a single analyzer-generator pair that can parse italian and sicilian at the same time.

[^a]: Note that this needs AnIta to be present within SiMoN's directory.

~~~
make complete
~~~

#### Keep intermediate binaries {-}

If you want to keep the intermediate binaries generated by conversion and combination of the ruleset and the lexicon, you can set the variable ```keep_intermediates``` to ```yes```:

~~~
make keep_intermediates=yes
~~~

The compiled binaries can be cleaned with ```make clean```.

## Manual compilation

SiMoN is provided as a lexicon and a ruleset in the XFST format. In order to convert those into the internal HFST binaries needed for looking up and generating morphological paradigms, the follwing commands are required:

### Step 1: Convert XFST files to HFST binaries {-}

```
$ hfst-lexc siciliano.lexc -o siciliano.lexc.hfst
$ hfst-twolc siciliano.twolc -o siciliano.twolc.hfst
```

### Step 2: Combine binaries to analyzer {-}

```
$ hfst-compose-intersect siciliano.lexc.hfst siciliano.twolc.hfst -o siciliano.analyzer.hfst
```

### Step 3: Invert analyzer to function as generator {-}

```
$ hfst-invert siciliano.analyzer.hfst -o siciliano.generator.hfst
```

> Note: AnIta can be compiled in the same way. Replace *siciliano* with *italiano* in the steps 1. - 3.

### Step 4: Unify SiMoN and AnIta {-}

Merges the two parsers for parallel analysis of sicilian and italian.

```
$ hfst-union -v italiano.generator.hfst siciliano.generator.hfst -o it-scn-analysator.hfst
```

