# Compile & Prepare SiMoN

[HFST-Suite]: http://hfst.sf.net/
[hfst-setup-link]: https://kitwiki.csc.fi/twiki/bin/view/KitWiki/HfstDownloads

## Prerequesites


In order to use SiMoN for morphological analysis, the [HFST-Suite] is required.

HFST is available for MAC/UNIX and Windows platforms and can be installed according to the information provided at the [project's wiki page][hfst-setup-link].
SiMoN is currently tested against hfst v3.7.x.

## Using the GNU Makefile

In case you have recieved binaries of SiMoN, you can skip this chapter after installing the HFST software and take a look at the [usage chapter](#using-simon).
If you received the SiMoN source files, you can use the provided [Makefile](Makefile)[^1] for to auto-compile the binaries.
Simply typing `make` in a terminal should get you set up.[^w]

[^1]: The HFST-Package needs to be installed and its binaries must be present in the systems $PATH variable. Run `make check` to make sure dependencies are met.

[^w]: **This has been tested for Mac OSX and Linux only!**
Even though GNU Make is [available for Windows](www.mingw.org), users of that platform are advised to follow the instructions in the section *[manual compilation](#manual-compilation)*. For these the only requirement is the HFST software.

### Make Options

The default behaviour is to compile the generator for sicilian morphology only.

#### All In One {-}

For convenience, there is an additional command that builds all parts of SiMoN and AnIta respectively and combines them into a single analyzer-generator pair that can parse italian and sicilian at the same time.

> **Note:** This needs AnIta's files to be present within SiMoN's directory.

~~~
make complete
~~~

Given you have a copy of AnIta's sources and only want to compile those, you can override the default target by issuing the following command:

~~~
make target=italian
~~~

#### Keep Intermediate Binaries {-}

If you want to keep the intermediate binaries generated by conversion and combination of the ruleset and the lexicon, you can set the variable `keep_intermediates` to `yes`:

~~~
make keep-intermediates=yes
~~~

The compiled binaries can be cleaned with `make clean`. \
**Caution!** This removes *any* hfst-binary created by executing the Makefile.

## Manual Compilation

SiMoN consists of two files, a lexicon (*siciliano.lexc*) and a ruleset (*siciliano.twolc*) in XFST format. In order to convert these to HFST binaries for looking up and generating morphological paradigms, follow the steps below:

> **Note:** AnIta can be compiled in the same way. Replace *siciliano* with *italiano* in the steps 1. - 3.

### Step 1: Convert XFST files to HFST binaries {-}

~~~
$ hfst-lexc siciliano.lexc -o siciliano.lexc.hfst
$ hfst-twolc siciliano.twolc -o siciliano.twolc.hfst
~~~

### Step 2: Combine binaries to analyzer {-}

~~~
$ hfst-compose-intersect siciliano.lexc.hfst \
  siciliano.twolc.hfst -o siciliano.analyzer.hfst
~~~

### Step 3: Invert analyzer to function as generator {-}

~~~
$ hfst-invert siciliano.analyzer.hfst -o siciliano.generator.hfst
~~~

### (Optional) Step 4: Unify SiMoN and AnIta {-}

Merges the two parsers for parallel analysis of Sicilian and Italian.

~~~
$ hfst-union -v italiano.generator.hfst \
  siciliano.generator.hfst -o it-scn-analysator.hfst
~~~
